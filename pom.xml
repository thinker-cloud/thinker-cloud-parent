<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.thinker.cloud</groupId>
        <artifactId>thinker-cloud-dependencies</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>thinker-cloud-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>thinker-cloud-parent</name>
    <packaging>pom</packaging>
    <description>Thinker Cloud Parent</description>
    <url>https://www.isexcuse.com</url>

    <properties>
        <java.version>17</java.version>
        <lombok.version>1.18.28</lombok.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <thinker-cloud.version>1.0.0-SNAPSHOT</thinker-cloud.version>
    </properties>

    <modules>
        <module>thinker-cloud-components</module>
        <module>thinker-cloud-starter</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- Thinker Cloud -->
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-common-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-core-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-db-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-dubbo-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-elasticsearch-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-kafka-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-log-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-mqtt-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-openapi-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-redis-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-rocketmq-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-seata-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-security-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-sentinel-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-task-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-tools-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-web-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-websocket-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thinker.cloud</groupId>
                <artifactId>thinker-cloud-zookeeper-starter</artifactId>
                <version>${thinker-cloud.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}</finalName>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <!-- 包含 -->
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <configuration>
                        <finalName>${project.build.finalName}</finalName>
                        <includeSystemScope>true</includeSystemScope>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>UTF-8</encoding>
                        <compilerArgs>
                            <arg>-parameters</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- 代码编译指定版本插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <target>${maven.compiler.target}</target>
                    <source>${maven.compiler.source}</source>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <skip>true</skip>
                    <compilerArgs>
                        <compilerArg>
                            -parameters
                        </compilerArg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <!-- 自动将javadoc转为swagger文档 -->
                        <path>
                            <groupId>com.github.therapi</groupId>
                            <artifactId>therapi-runtime-javadoc-scribe</artifactId>
                            <version>${therapi-runtime-javadoc.version}</version>
                        </path>
                        <!-- 修复 lombok、springdoc 冲突 -->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!-- 打包关联最新 git commit 信息插件 -->
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <version>${git.commit.plugin.version}</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>
                </executions>
                <configuration>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <!--因为项目定制了jackson的日期时间序列化/反序列化格式，因此这里要进行配置,不然通过management.info.git.mode=full进行完整git信息监控时会存在问题-->
                    <dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
                    <includeOnlyProperties>
                        <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
                        <includeOnlyProperty>^git.commit.(id|message|time).*$</includeOnlyProperty>
                    </includeOnlyProperties>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
